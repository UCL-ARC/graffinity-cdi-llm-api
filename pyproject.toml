[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools",
]

[project]
authors = [
    {email = "h.moss@ucl.ac.uk", name = "Harry Moss"},
    {email = "n.aznan@ucl.ac.uk", name = "Nik Khadijah Nik Aznan"},
    {email = "s.jabbari@ucl.ac.uk", name = "Sanaz Jabbari"},
]
classifiers = [
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed",
]
dependencies = [
    "boto3>=1.29.6,<1.30.0",
    "fastapi[all]>=0.104.1,<0.105.0",
    "gunicorn>=22.0.0,<23.0.0",
    "langchain>=0.0.335,<0.1.0",
    "loguru>=0.7.2",
    "openai>=1.2.0,<1.3.0",
    "uvicorn>=0.24.0,<0.25.0",
]
description = "API for converting user searches to robust LLM prompts and returning a response."
keywords = [
]
name = "llm-api"
optional-dependencies = {dev = [
    "build",
    "detect-secrets",
    "mypy",
    "pre-commit",
    "pytest",
    "ruff",
    "tox>=4",
    "twine",
], test = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
    "tox",
]}
readme = "README.md"
requires-python = ">=3.11, <4.0"
version = "0.1.13"
license.file = "LICENSE.md"
urls.homepage = "https://github.com/UCL-ARC/graffinity-cdi-llm-api/"

[tool.coverage]
report = {skip_covered = false, sort = "cover"}
run = {branch = true, omit = [
    "src/llm_api/_version.py",
], parallel = true, source = [
    "llm-api",
]}
paths.source = [
    "src",
    ".tox*/*/lib/python*/site-packages",
]

[tool.mypy]
explicit_package_bases = true
mypy_path = "./src/"
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = "--color=yes -v"
testpaths = [
    "tests",
]

[tool.ruff]
extend-exclude = ["tests"]
fix = true
force-exclude = true
ignore = [
    "ANN101", # Missing type annotation for `self` in method
    "COM812", # trailing commas (ruff-format recommended)
    "D203", # no-blank-line-before-class
    "D212", # multi-line-summary-first-line
    "D407", # removed dashes lines under sections
    "D417", # argument description in docstring (unreliable)
    "ISC001", # simplify implicit str concatenation (ruff-format recommended)
]
line-length = 100
per-file-ignores = {"tests*" = [
    "INP001",
    "S101",
]}
select = [
    "ALL",
]
target-version = "py311"
isort.known-first-party = [
    "llm_api",
]
mccabe.max-complexity = 18
pep8-naming.classmethod-decorators = [
    "classmethod",
]

[tool.tomlsort]
all = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
overrides."project.classifiers".inline_arrays = false
overrides."tool.coverage.paths.source".inline_arrays = false

[tool.tox]
legacy_tox_ini = """
    [gh-actions]
    python =
        3.11: py311

    [testenv]
    commands =
        pytest . --cov=llm_api --cov-report=xml
    deps =
        pytest
        pytest-asyncio
        pytest-cov
        pytest-mock

    [tox]
    env_list =
        py311
"""
